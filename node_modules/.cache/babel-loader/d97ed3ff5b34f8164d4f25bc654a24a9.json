{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/GitHub API/src/Context/userContext.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport axios from 'axios'; // *** Mock Data to prevent consumig API requests ***\n\nimport mockUser from \"./mockData/mockUser\";\nimport mockRepos from \"./mockData/mockRepos\";\nimport mockFollowers from \"./mockData/mockFollowers\"; //  *** END Mock Data ***\n// API URL:\n\nconst rootUrl = 'https://api.github.com';\nconst GithubContext = createContext();\n\nconst GithubProvider = ({\n  children\n}) => {\n  // State:\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers);\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      githubUser,\n      repos,\n      followers\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nexport { GithubContext, GithubProvider };","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/GitHub API/src/Context/userContext.js"],"names":["React","useState","useEffect","createContext","axios","mockUser","mockRepos","mockFollowers","rootUrl","GithubContext","GithubProvider","children","githubUser","setGithubUser","repos","setRepos","followers","setFollowers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAAyD,OAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CACA;AAEA;;AACA,MAAMC,OAAO,GAAG,wBAAhB;AAIA,MAAMC,aAAa,GAAGN,aAAa,EAAnC;;AAEA,MAAMO,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACnC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACI,QAAD,CAA5C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACK,SAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACM,aAAD,CAA1C;AAEA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACK,MAAAA,UAAD;AAAaE,MAAAA,KAAb;AAAoBE,MAAAA;AAApB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFL,QADE,CAAP;AAGH,CATD;;AAWA,SAAQF,aAAR,EAAuBC,cAAvB","sourcesContent":["import React, { useState, useEffect, createContext} from 'react';\nimport axios from 'axios';\n\n// *** Mock Data to prevent consumig API requests ***\nimport mockUser from \"./mockData/mockUser\";\nimport mockRepos from \"./mockData/mockRepos\";\nimport mockFollowers from \"./mockData/mockFollowers\";\n//  *** END Mock Data ***\n\n// API URL:\nconst rootUrl = 'https://api.github.com';\n\n\n\nconst GithubContext = createContext();\n\nconst GithubProvider = ({children}) => {\n    // State:\n    const [githubUser, setGithubUser] = useState(mockUser);\n    const [repos, setRepos] = useState(mockRepos);\n    const [followers, setFollowers] = useState(mockFollowers);\n\n    return <GithubContext.Provider value={{githubUser, repos, followers}}>\n        {children}\n    </GithubContext.Provider>\n}\n\nexport {GithubContext, GithubProvider};\n"]},"metadata":{},"sourceType":"module"}