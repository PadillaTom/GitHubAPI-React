{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/GitHub API/src/Components/User Related/Info.js\";\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { GithubContext } from \"../../Context/userContext\";\nimport { GoRepo, GoGist } from \"react-icons/go\";\nimport { FiUsers, FiUserPlus } from \"react-icons/fi\";\n\nconst UserInfo = () => {\n  // Context:\n  const {\n    githubUser\n  } = useContext(GithubContext);\n  const {\n    public_repos,\n    followers,\n    following,\n    public_gists\n  } = githubUser; // Data for UserInfo Cards:\n\n  const myItems = [{\n    id: 1,\n    icon: /*#__PURE__*/React.createElement(GoRepo, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }),\n    label: \"Repos\",\n    value: public_repos,\n    color: \"pink\"\n  }, {\n    id: 2,\n    icon: /*#__PURE__*/React.createElement(FiUsers, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }),\n    label: \"Followers\",\n    value: followers,\n    color: \"green\"\n  }, {\n    id: 3,\n    icon: /*#__PURE__*/React.createElement(FiUserPlus, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }),\n    label: \"Following\",\n    value: following,\n    color: \"purple\"\n  }, {\n    id: 4,\n    icon: /*#__PURE__*/React.createElement(GoGist, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }),\n    label: \"Gists\",\n    value: public_gists,\n    color: \"yellow\"\n  }]; // *** Main ***\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, myItems.map(item => {\n    return /*#__PURE__*/React.createElement(Item, Object.assign({\n      key: item.id\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }));\n  })));\n}; // *** Component that displays each card:\n\n\nconst Item = ({\n  icon,\n  label,\n  value,\n  color\n}) => {\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, icon), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, value), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem 2rem;\n  @media (min-width: 640px) {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .item {\n    border-radius: var(--radius);\n    padding: 1rem 2rem;\n    background: var(--clr-white);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 3rem;\n    align-items: center;\n    span {\n      width: 3rem;\n      height: 3rem;\n      display: grid;\n      place-items: center;\n      border-radius: 50%;\n    }\n    .icon {\n      font-size: 1.5rem;\n    }\n    h3 {\n      margin-bottom: 0;\n      letter-spacing: 0;\n    }\n    p {\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    .pink {\n      background: #ffe0f0;\n      color: #da4a91;\n    }\n    .green {\n      background: var(--clr-primary-10);\n      color: var(--clr-primary-5);\n    }\n    .purple {\n      background: #e6e6ff;\n      color: #5d55fa;\n    }\n    .yellow {\n      background: #fffbea;\n      color: #f0b429;\n    }\n  }\n`;\nexport default UserInfo;","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/GitHub API/src/Components/User Related/Info.js"],"names":["React","useState","useContext","styled","GithubContext","GoRepo","GoGist","FiUsers","FiUserPlus","UserInfo","githubUser","public_repos","followers","following","public_gists","myItems","id","icon","label","value","color","map","item","Item","Wrapper","section"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport styled from 'styled-components';\n\nimport {GithubContext} from \"../../Context/userContext\"\n\nimport {GoRepo, GoGist} from \"react-icons/go\";\nimport {FiUsers, FiUserPlus} from \"react-icons/fi\";\n\n\nconst UserInfo = () => {\n  // Context:\n  const {githubUser} = useContext(GithubContext);\n  const {public_repos, followers, following, public_gists} = githubUser;\n\n  // Data for UserInfo Cards:\n  const myItems = [\n    {\n      id: 1,\n      icon: <GoRepo className=\"icon\"></GoRepo>,\n      label: \"Repos\",\n      value: public_repos,\n      color: \"pink\",\n    },\n    {\n      id: 2,\n      icon: <FiUsers className=\"icon\"></FiUsers>,\n      label: \"Followers\",\n      value: followers,\n      color: \"green\",\n    },\n    {\n      id: 3,\n      icon: <FiUserPlus className=\"icon\"></FiUserPlus>,\n      label: \"Following\",\n      value: following,\n      color: \"purple\",\n    },\n    {\n      id: 4,\n      icon: <GoGist className=\"icon\"></GoGist>,\n      label: \"Gists\",\n      value: public_gists,\n      color: \"yellow\",\n    },\n  ]\n  \n  // *** Main ***\n  return <section className=\"section\">\n    <Wrapper className=\"section-center\">\n      {myItems.map((item)=>{\n        return <Item key={item.id} {...item}></Item>\n      })}\n    </Wrapper>\n  </section>;\n};\n\n// *** Component that displays each card:\nconst Item = ({icon, label, value, color}) => {\n  return (\n    <article className=\"item\">\n      <span className={color}>\n        {icon}\n      </span>\n      <div>\n        <h3>{value}</h3>\n        <p>{label}</p>        \n      </div>\n    </article>\n  )\n}\n\n\n\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem 2rem;\n  @media (min-width: 640px) {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .item {\n    border-radius: var(--radius);\n    padding: 1rem 2rem;\n    background: var(--clr-white);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 3rem;\n    align-items: center;\n    span {\n      width: 3rem;\n      height: 3rem;\n      display: grid;\n      place-items: center;\n      border-radius: 50%;\n    }\n    .icon {\n      font-size: 1.5rem;\n    }\n    h3 {\n      margin-bottom: 0;\n      letter-spacing: 0;\n    }\n    p {\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    .pink {\n      background: #ffe0f0;\n      color: #da4a91;\n    }\n    .green {\n      background: var(--clr-primary-10);\n      color: var(--clr-primary-5);\n    }\n    .purple {\n      background: #e6e6ff;\n      color: #5d55fa;\n    }\n    .yellow {\n      background: #fffbea;\n      color: #f0b429;\n    }\n  }\n`;\n\nexport default UserInfo;\n"]},"metadata":{},"sourceType":"module"}